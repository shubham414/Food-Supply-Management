/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.QualityChecker;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.QualityCheckRequest;
import Business.WorkQueue.WorkRequest;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author
 */
public class QualityCheckerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form QualityCheckerWorkAreaJPanel
     */
    private JPanel container;
    private UserAccount account;
    private Organization org;
    private Enterprise enterprise;
    private EcoSystem system;

    public QualityCheckerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.container = container;
        this.account = account;
        this.org = org;
        this.enterprise = enterprise;
        this.system = system;
        populateReqTable();
        techEstimateDate.setDate(new Date());
    }

    public void populateReqTable() {
        DefaultTableModel model = (DefaultTableModel) tblReceivedQualityCheckRequests.getModel();
        model.setRowCount(0);

        for (WorkRequest work : system.getWorkQueue().getWorkRequestList()) {
            if (work instanceof QualityCheckRequest) {
                Object[] row = new Object[9];
                row[0] = work;
                row[1] = work.getFood();
                row[2] = work.getFood().getCode();
                row[3] = ((QualityCheckRequest) work).getDescription();
                row[4] = work.getStatus();
                row[5] = work.getSender();
                row[6] = work.getReceiver();
                row[7] = ((QualityCheckRequest) work).getServiceDateInString();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        lblActivity1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblReceivedQualityCheckRequests = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        lblProblemDesc = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnViewDesc = new javax.swing.JButton();
        btnAssigntoMe = new javax.swing.JButton();
        techEstimateDate = new org.jdesktop.swingx.JXDatePicker();

        setBackground(new java.awt.Color(255, 204, 102));

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 1, 24)); // NOI18N
        jLabel6.setText("Activity:");

        lblActivity1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        lblActivity1.setText("Quality Checker work area");

        tblReceivedQualityCheckRequests.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblReceivedQualityCheckRequests.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        tblReceivedQualityCheckRequests.setForeground(new java.awt.Color(102, 0, 102));
        tblReceivedQualityCheckRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RequestId", "Food", "Code", "Description", "Status", "Sender", "Quality Checker Name", "Possible date of Assistance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblReceivedQualityCheckRequests);

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel7.setText("Problem Description:");

        lblProblemDesc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel8.setText("Date of providing service");

        btnViewDesc.setBackground(new java.awt.Color(102, 102, 102));
        btnViewDesc.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        btnViewDesc.setForeground(new java.awt.Color(255, 255, 255));
        btnViewDesc.setText("View Description");
        btnViewDesc.setMaximumSize(new java.awt.Dimension(200, 200));
        btnViewDesc.setMinimumSize(new java.awt.Dimension(200, 200));
        btnViewDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDescActionPerformed(evt);
            }
        });

        btnAssigntoMe.setBackground(new java.awt.Color(102, 102, 102));
        btnAssigntoMe.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        btnAssigntoMe.setForeground(new java.awt.Color(255, 255, 255));
        btnAssigntoMe.setText("Assign to me");
        btnAssigntoMe.setMaximumSize(new java.awt.Dimension(200, 200));
        btnAssigntoMe.setMinimumSize(new java.awt.Dimension(200, 200));
        btnAssigntoMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssigntoMeActionPerformed(evt);
            }
        });

        techEstimateDate.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(techEstimateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(312, 312, 312)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAssigntoMe, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnViewDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(38, 38, 38)
                        .addComponent(lblActivity1)))
                .addContainerGap(287, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(243, Short.MAX_VALUE)
                    .addComponent(lblProblemDesc)
                    .addGap(558, 1051, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblActivity1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(btnViewDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(techEstimateDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAssigntoMe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(10, 441, Short.MAX_VALUE)
                    .addComponent(lblProblemDesc)
                    .addGap(0, 284, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDescActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblReceivedQualityCheckRequests.getSelectedRow();
        if (selectedrow >= 0) {
            QualityCheckRequest request = (QualityCheckRequest) tblReceivedQualityCheckRequests.getValueAt(selectedrow, 0);
            lblProblemDesc.setText(request.getDescription());
            Date oDate = techEstimateDate.getDate();
            DateFormat oDateFormat = new SimpleDateFormat("MM-dd-yyyy");
            String szDate = oDateFormat.format(oDate);
            request.setServiceDateInString(szDate);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Request!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnViewDescActionPerformed

    private void btnAssigntoMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssigntoMeActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblReceivedQualityCheckRequests.getSelectedRow();
        if (selectedrow >= 0) {

            QualityCheckRequest request = (QualityCheckRequest) tblReceivedQualityCheckRequests.getValueAt(selectedrow, 0);
            lblProblemDesc.setText(request.getDescription());

            if (request.getStatus().equalsIgnoreCase("Completed")) {
                JOptionPane.showMessageDialog(null, "Request already processed", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                Date oDate = techEstimateDate.getDate();
                Date now = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
                if ((sdf.format(oDate).equals(sdf.format(now))) || (sdf.format(oDate).compareTo(sdf.format(now))) > 0) {
                    DateFormat oDateFormat = new SimpleDateFormat("MM-dd-yyyy");
                    String szDate = oDateFormat.format(oDate);
                    request.setReceiver(this.account);
                    request.setStatus("Completed");
                    request.setDayOfDelivery(szDate);
                    techEstimateDate.setDate(oDate);
                    populateReqTable();
                } else {
                    JOptionPane.showMessageDialog(null, "Invalid Date of Delivery", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Request!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAssigntoMeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssigntoMe;
    private javax.swing.JButton btnViewDesc;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblActivity1;
    private javax.swing.JLabel lblProblemDesc;
    private javax.swing.JTable tblReceivedQualityCheckRequests;
    private org.jdesktop.swingx.JXDatePicker techEstimateDate;
    // End of variables declaration//GEN-END:variables
}
